[user]
	name = gpwclark
	email = gpwclark@gmail.com
[core]
    editor = vim
	pager = less -x1,5
[diff]
    tool = meld
#	external = git-meld
[difftool]
	prompt = false
[difftool "meld"]
	cmd = meld "$LOCAL" "$REMOTE"
[merge]
	tool = meld
[mergetool "meld"]
	# Choose one of these 2 lines (not both!) explained below.
	cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
	#cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
[alias]
	track = ls-tree -r master --name-only
	track-all = log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'
    wow = log --pretty=format:\"%h %s\" --graph
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ $`echo $VAR` = \\\"$OLD\\\" ]]; then export $VAR=\\\"$NEW\\\"; fi\" $@; }; f "
    prom = pull --rebase
    pom = pull
    aa = add --all
    dc = diff --cached
    di = diff
    pullff = pull --ff-only
    ls = log --oneline
    newslite = "!f() {\
                git diff-tree --no-commit-id --name-only -r  $1 $2;\
            };f"
    news = "!f() {\
                git diff --no-commit-id -r  $1 $2;\
            };f"
    addmod = "!f() {\
				git status | grep -iE '.*modified.*|.*deleted.*' | tr -s '[[:blank:]]' | cut -d' ' -f2 | xargs git add;\
            };f"
	cara = commit --amend --reset-author
	graph = log --graph --oneline â€“decorate=short
	files = diff-tree --no-commit-id --name-only -r
	logsha = "log --format=format:\"%C(auto)%H %C(green)%aN%Creset %s\""
	branch-activity = "!sh -c 'git log -n1 --pretty=format:\"%aI%d\n\" $1 --' -"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge --skip -- %f
	process = git-lfs filter-process --skip
	required = true
[color]
	ui = auto
[init]
	defaultBranch = main
